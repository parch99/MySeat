{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { SHRAMBA_BRSKALNIKA } from '../razredi/shramba';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../storitve/myseat-podatki.service\";\nexport let AvtentikacijaService = /*#__PURE__*/(() => {\n  class AvtentikacijaService {\n    constructor(shramba, myseatPodatkiStoritev) {\n      this.shramba = shramba;\n      this.myseatPodatkiStoritev = myseatPodatkiStoritev;\n    }\n    b64Utf8(niz) {\n      return decodeURIComponent(Array.prototype.map.call(atob(niz), znak => {\n        return '%' + ('00' + znak.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n    }\n    jePrijavljen() {\n      const zeton = this.vrniZeton();\n      if (zeton) {\n        const koristnaVsebina = JSON.parse(this.b64Utf8(zeton.split('.')[1]));\n        return koristnaVsebina.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    }\n    vrniTrenutnegaUporabnika() {\n      if (this.jePrijavljen()) {\n        const zeton = this.vrniZeton();\n        const {\n          ime,\n          elektronskiNaslov\n        } = JSON.parse(this.b64Utf8(zeton.split('.')[1]));\n        return {\n          ime,\n          elektronskiNaslov\n        };\n      }\n    }\n    vrniIdTrenutnegaUporabnika() {\n      if (this.jePrijavljen()) {\n        const zeton = this.vrniZeton();\n        const {\n          _id\n        } = JSON.parse(this.b64Utf8(zeton.split('.')[1]));\n        const id = _id.toString();\n        return id;\n      }\n    }\n    prijava(uporabnik) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return this.myseatPodatkiStoritev.prijava(uporabnik).then(rezultatAvtentikacije => {\n          this.shraniZeton(rezultatAvtentikacije[\"žeton\"]);\n        });\n      });\n    }\n    googlePrijava(token) {\n      this.shraniZeton(token);\n    }\n    facebookPrijava(token) {\n      this.shraniZeton(token);\n    }\n    registracija(uporabnik) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return this.myseatPodatkiStoritev.registracija(uporabnik).then(rezultatAvtentikacije => {\n          this.shraniZeton(rezultatAvtentikacije[\"žeton\"]);\n        });\n      });\n    }\n    odjava() {\n      this.shramba.removeItem('myseat-zeton');\n    }\n    vrniZeton() {\n      return this.shramba.getItem('myseat-zeton');\n    }\n    shraniZeton(zeton) {\n      this.shramba.setItem('myseat-zeton', zeton);\n    }\n  }\n  AvtentikacijaService.ɵfac = function AvtentikacijaService_Factory(t) {\n    return new (t || AvtentikacijaService)(i0.ɵɵinject(SHRAMBA_BRSKALNIKA), i0.ɵɵinject(i1.MyseatPodatkiService));\n  };\n  AvtentikacijaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AvtentikacijaService,\n    factory: AvtentikacijaService.ɵfac,\n    providedIn: 'root'\n  });\n  return AvtentikacijaService;\n})();","map":{"version":3,"mappings":"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","names":["SHRAMBA_BRSKALNIKA","AvtentikacijaService","constructor","shramba","myseatPodatkiStoritev","b64Utf8","niz","decodeURIComponent","Array","prototype","map","call","atob","znak","charCodeAt","toString","slice","join","jePrijavljen","zeton","vrniZeton","koristnaVsebina","JSON","parse","split","exp","Date","now","vrniTrenutnegaUporabnika","ime","elektronskiNaslov","vrniIdTrenutnegaUporabnika","_id","id","prijava","uporabnik","then","rezultatAvtentikacije","shraniZeton","googlePrijava","token","facebookPrijava","registracija","odjava","removeItem","getItem","setItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\MySeat\\app_public\\src\\app\\skupno\\storitve\\avtentikacija.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\nimport { SHRAMBA_BRSKALNIKA } from '../razredi/shramba';\r\nimport { Uporabnik } from '../razredi/uporabnik';\r\nimport { RezultatAvtentikacije } from '../razredi/rezultat-avtentikacije';\r\nimport { MyseatPodatkiService } from '../storitve/myseat-podatki.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AvtentikacijaService {\r\n\r\n  constructor(@Inject(SHRAMBA_BRSKALNIKA) private shramba: Storage,\r\n    private myseatPodatkiStoritev: MyseatPodatkiService\r\n  ) { }\r\n\r\n  private b64Utf8(niz: string): string {\r\n    return decodeURIComponent(\r\n      Array.prototype.map\r\n        .call(\r\n          atob(niz),\r\n          (znak: string) => {\r\n            return '%' + ('00' + znak.charCodeAt(0).toString(16)).slice(-2);\r\n          }\r\n        )\r\n        .join('')\r\n    );\r\n  };\r\n  \r\n  public jePrijavljen(): boolean {\r\n    const zeton: string = this.vrniZeton();\r\n    if (zeton) {\r\n      const koristnaVsebina = JSON.parse(this.b64Utf8(zeton.split('.')[1]));\r\n      return koristnaVsebina.exp > (Date.now() / 1000);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public vrniTrenutnegaUporabnika(): Uporabnik {\r\n    if (this.jePrijavljen()) {\r\n      const zeton: string = this.vrniZeton();\r\n      const { ime, elektronskiNaslov} = JSON.parse(this.b64Utf8(zeton.split('.')[1]));\r\n      return { ime, elektronskiNaslov} as Uporabnik;\r\n    }\r\n  }\r\n  \r\n  public vrniIdTrenutnegaUporabnika(): string {\r\n    if (this.jePrijavljen()) {\r\n      const zeton: string = this.vrniZeton();\r\n      const { _id } = JSON.parse(this.b64Utf8(zeton.split('.')[1]));\r\n      const id: string = _id.toString();\r\n      return id as string;\r\n    }\r\n  }\r\n\r\n  public async prijava(uporabnik: Uporabnik): Promise<any> {\r\n    return this.myseatPodatkiStoritev\r\n      .prijava(uporabnik)\r\n      .then((rezultatAvtentikacije: RezultatAvtentikacije) => {\r\n        this.shraniZeton(rezultatAvtentikacije[\"žeton\"]);\r\n      });\r\n  }\r\n  public googlePrijava(token: string) {\r\n      this.shraniZeton(token);\r\n  }\r\n  public facebookPrijava(token: string) {\r\n    this.shraniZeton(token);\r\n}\r\n  public async registracija(uporabnik: Uporabnik): Promise<any> {\r\n    return this.myseatPodatkiStoritev\r\n      .registracija(uporabnik)\r\n      .then((rezultatAvtentikacije: RezultatAvtentikacije) => {\r\n        this.shraniZeton(rezultatAvtentikacije[\"žeton\"]);\r\n      })\r\n  }\r\n  public odjava(): void {\r\n    this.shramba.removeItem('myseat-zeton');\r\n  }\r\n\r\n  public vrniZeton(): string {\r\n    return this.shramba.getItem('myseat-zeton');\r\n  }\r\n  public shraniZeton(zeton: string): void {\r\n    this.shramba.setItem('myseat-zeton', zeton);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}