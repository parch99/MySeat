{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let RazdaljaPipe = /*#__PURE__*/(() => {\n  class RazdaljaPipe {\n    transform(razdalja) {\n      const jeStevilo = function (stevilo) {\n        return !isNaN(parseFloat(stevilo)) && isFinite(stevilo);\n      };\n      if (razdalja && jeStevilo(razdalja)) {\n        let enota = 'm';\n        let prikazanaRazdalja = '0';\n        if (razdalja > 1) {\n          prikazanaRazdalja = razdalja.toFixed(1);\n          enota = 'km';\n        } else {\n          prikazanaRazdalja = Math.round(razdalja * 1000).toString();\n        }\n        return prikazanaRazdalja + ' ' + enota;\n      } else {\n        return '?';\n      }\n    }\n  }\n  RazdaljaPipe.ɵfac = function RazdaljaPipe_Factory(t) {\n    return new (t || RazdaljaPipe)();\n  };\n  RazdaljaPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"razdalja\",\n    type: RazdaljaPipe,\n    pure: true\n  });\n  return RazdaljaPipe;\n})();","map":{"version":3,"mappings":";AAKA,WAAaA,YAAY;EAAnB,MAAOA,YAAY;IAEvBC,SAAS,CAACC,QAAgB;MACxB,MAAMC,SAAS,GAAG,UAASC,OAAO;QAChC,OAAO,CAACC,KAAK,CAACC,UAAU,CAACF,OAAO,CAAC,CAAC,IAAIG,QAAQ,CAACH,OAAO,CAAC;MACzD,CAAC;MAED,IAAIF,QAAQ,IAAIC,SAAS,CAACD,QAAQ,CAAC,EAAE;QACnC,IAAIM,KAAK,GAAG,GAAG;QACf,IAAIC,iBAAiB,GAAG,GAAG;QAC3B,IAAIP,QAAQ,GAAG,CAAC,EAAE;UAChBO,iBAAiB,GAAGP,QAAQ,CAACQ,OAAO,CAAC,CAAC,CAAC;UACvCF,KAAK,GAAG,IAAI;SACb,MAAM;UACLC,iBAAiB,GAAGE,IAAI,CAACC,KAAK,CAACV,QAAQ,GAAG,IAAI,CAAC,CAACW,QAAQ,EAAE;;QAE5D,OAAOJ,iBAAiB,GAAG,GAAG,GAAGD,KAAK;OACvC,MAAM;QACL,OAAO,GAAG;;IAEd;;;qBApBWR,YAAY;EAAA;;;UAAZA,YAAY;IAAAc;EAAA;EAAA,OAAZd,YAAY;AAAA","names":["RazdaljaPipe","transform","razdalja","jeStevilo","stevilo","isNaN","parseFloat","isFinite","enota","prikazanaRazdalja","toFixed","Math","round","toString","pure"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\MySeat\\app_public\\src\\app\\skupno\\cevi\\razdalja.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'razdalja'\r\n})\r\nexport class RazdaljaPipe implements PipeTransform {\r\n\r\n  transform(razdalja: number): string {\r\n    const jeStevilo = function(stevilo) {\r\n      return !isNaN(parseFloat(stevilo)) && isFinite(stevilo);\r\n    }\r\n\r\n    if (razdalja && jeStevilo(razdalja)) {\r\n      let enota = 'm';\r\n      let prikazanaRazdalja = '0';\r\n      if (razdalja > 1) {\r\n        prikazanaRazdalja = razdalja.toFixed(1);\r\n        enota = 'km';\r\n      } else {\r\n        prikazanaRazdalja = Math.round(razdalja * 1000).toString();\r\n      }\r\n      return prikazanaRazdalja + ' ' + enota;\r\n    } else {\r\n      return '?';\r\n    }\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}