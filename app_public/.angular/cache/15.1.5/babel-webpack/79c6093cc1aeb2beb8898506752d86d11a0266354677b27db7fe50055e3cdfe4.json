{"ast":null,"code":"import { merge, fromEvent, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let PovezavaService = /*#__PURE__*/(() => {\n  class PovezavaService {\n    constructor() {\n      this.jePovezava = false;\n      merge(fromEvent(window, 'offline').pipe(map(() => false)), fromEvent(window, 'online').pipe(map(() => true)), new Observable(sub => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      })).subscribe(povezano => this.jePovezava = povezano);\n    }\n  }\n  PovezavaService.ɵfac = function PovezavaService_Factory(t) {\n    return new (t || PovezavaService)();\n  };\n  PovezavaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PovezavaService,\n    factory: PovezavaService.ɵfac,\n    providedIn: 'root'\n  });\n  return PovezavaService;\n})();","map":{"version":3,"mappings":"AACA,SAASA,KAAK,EAAEC,SAAS,EAAEC,UAAU,QAAkB,MAAM;AAC7D,SAASC,GAAG,QAAQ,gBAAgB;;AAKpC,WAAaC,eAAe;EAAtB,MAAOA,eAAe;IAE1BC;MADO,eAAU,GAAY,KAAK;MAEhCL,KAAK,CACHC,SAAS,CAACK,MAAM,EAAE,SAAS,CAAC,CAACC,IAAI,CAACJ,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,EACnDF,SAAS,CAACK,MAAM,EAAE,QAAQ,CAAC,CAACC,IAAI,CAACJ,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,EACjD,IAAID,UAAU,CAAEM,GAAsB,IAAI;QACxCA,GAAG,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC;QAC1BH,GAAG,CAACI,QAAQ,EAAE;MAChB,CAAC,CAAC,CAAC,CACFC,SAAS,CAACC,QAAQ,IAAI,IAAI,CAACC,UAAU,GAAGD,QAAQ,CAAC;IACtD;;;qBAXWV,eAAe;EAAA;;WAAfA,eAAe;IAAAY,SAAfZ,eAAe;IAAAa,YAFd;EAAM;EAAA,OAEPb,eAAe;AAAA","names":["merge","fromEvent","Observable","map","PovezavaService","constructor","window","pipe","sub","next","navigator","onLine","complete","subscribe","povezano","jePovezava","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\MySeat\\app_public\\src\\app\\skupno\\storitve\\povezava.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { merge, fromEvent, Observable, Observer } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PovezavaService {\r\n  public jePovezava: boolean = false;\r\n  constructor() {\r\n    merge<boolean>(\r\n      fromEvent(window, 'offline').pipe(map(() => false)),\r\n      fromEvent(window, 'online').pipe(map(() => true)),\r\n      new Observable((sub: Observer<boolean>) => {\r\n        sub.next(navigator.onLine);\r\n        sub.complete();\r\n      }))\r\n      .subscribe(povezano => this.jePovezava = povezano);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}