{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { SHRAMBA_BRSKALNIKA } from '../razredi/shramba';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../storitve/myseat-podatki.service\";\nexport let AvtentikacijaService = /*#__PURE__*/(() => {\n  class AvtentikacijaService {\n    constructor(shramba, myseatPodatkiStoritev) {\n      this.shramba = shramba;\n      this.myseatPodatkiStoritev = myseatPodatkiStoritev;\n    }\n    b64Utf8(niz) {\n      return decodeURIComponent(Array.prototype.map.call(atob(niz), znak => {\n        return '%' + ('00' + znak.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n    }\n    jePrijavljen() {\n      const zeton = this.vrniZeton();\n      if (zeton) {\n        const koristnaVsebina = JSON.parse(this.b64Utf8(zeton.split('.')[1]));\n        return koristnaVsebina.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    }\n    vrniTrenutnegaUporabnika() {\n      if (this.jePrijavljen()) {\n        const zeton = this.vrniZeton();\n        const {\n          ime,\n          elektronskiNaslov\n        } = JSON.parse(this.b64Utf8(zeton.split('.')[1]));\n        return {\n          ime,\n          elektronskiNaslov\n        };\n      }\n    }\n    vrniIdTrenutnegaUporabnika() {\n      if (this.jePrijavljen()) {\n        const zeton = this.vrniZeton();\n        const {\n          _id\n        } = JSON.parse(this.b64Utf8(zeton.split('.')[1]));\n        const id = _id.toString();\n        return id;\n      }\n    }\n    prijava(uporabnik) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return this.myseatPodatkiStoritev.prijava(uporabnik).then(rezultatAvtentikacije => {\n          this.shraniZeton(rezultatAvtentikacije[\"žeton\"]);\n        });\n      });\n    }\n    googlePrijava(token) {\n      this.shraniZeton(token);\n    }\n    facebookPrijava(token) {\n      this.shraniZeton(token);\n    }\n    registracija(uporabnik) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return this.myseatPodatkiStoritev.registracija(uporabnik).then(rezultatAvtentikacije => {\n          this.shraniZeton(rezultatAvtentikacije[\"žeton\"]);\n        });\n      });\n    }\n    odjava() {\n      this.shramba.removeItem('myseat-zeton');\n    }\n    vrniZeton() {\n      return this.shramba.getItem('myseat-zeton');\n    }\n    shraniZeton(zeton) {\n      this.shramba.setItem('myseat-zeton', zeton);\n    }\n  }\n  AvtentikacijaService.ɵfac = function AvtentikacijaService_Factory(t) {\n    return new (t || AvtentikacijaService)(i0.ɵɵinject(SHRAMBA_BRSKALNIKA), i0.ɵɵinject(i1.MyseatPodatkiService));\n  };\n  AvtentikacijaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AvtentikacijaService,\n    factory: AvtentikacijaService.ɵfac,\n    providedIn: 'root'\n  });\n  return AvtentikacijaService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}